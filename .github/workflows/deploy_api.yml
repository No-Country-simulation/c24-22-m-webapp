name: Deploy API with ngrok

on:
  push:
    branches:
      - backend
  pull_request:
    branches:
      - backend

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          cd backend
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Apply migrations
        run: |
          cd backend
          source venv/bin/activate
          python manage.py makemigrations
          python manage.py migrate

      - name: Load test data
        run: |
          cd backend
          source venv/bin/activate
          sqlite3 db.sqlite3 ".read fictionalData.sql"

      - name: Install ngrok
        run: |
          wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
          unzip ngrok-stable-linux-amd64.zip
          chmod +x ngrok
          mv ngrok /tmp/ngrok

      - name: Authenticate ngrok
        run: |
          /tmp/ngrok authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

      - name: Expose API with ngrok
        run: |
          cd backend
          source venv/bin/activate
          nohup python manage.py runserver 0.0.0.0:8000 &  # Iniciar Django en segundo plano
          
          # Verificar si el servidor Django est치 corriendo en el puerto 8000
          sleep 10  # Esperar para asegurar que el servidor inicie
          if ! lsof -i :8000; then
            echo "Django server is not running!"  # Si no se est치 ejecutando, fallar el flujo
            exit 1
          fi

          # Si Django est치 corriendo, ejecutar ngrok
          /tmp/ngrok http 8000 --log=stdout > ngrok.log &  # Iniciar ngrok en segundo plano
          sleep 10  # Esperar para que ngrok establezca la conexi칩n
          URL=$(tail -n 10 ngrok.log | grep -o 'https://[a-z0-9]*\.ngrok.io')  # Obtener la URL
          echo "API URL: $URL"

